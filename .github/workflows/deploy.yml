name: Deploy to Arc Testnet

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'testnet'
        type: choice
        options:
          - testnet
          - mainnet

jobs:
  deploy-contracts:
    name: Deploy Smart Contracts
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: packages/contracts/package-lock.json

      - name: Install dependencies
        working-directory: packages/contracts
        run: npm ci

      - name: Compile contracts
        working-directory: packages/contracts
        run: npm run build

      - name: Deploy to Arc Testnet
        working-directory: packages/contracts
        env:
          ARC_RPC_URL: ${{ secrets.ARC_RPC_URL }}
          WALLET_PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY }}
        run: npm run deploy:testnet
        if: github.event.inputs.environment == 'testnet'

      - name: Save deployment addresses
        uses: actions/upload-artifact@v4
        with:
          name: deployment-addresses
          path: packages/contracts/deployments/*.json
          retention-days: 90

      - name: Comment PR with deployment info
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const deploymentInfo = 'ðŸš€ Contracts deployed to Arc testnet';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: deploymentInfo
            });
        continue-on-error: true

  update-env-files:
    name: Update Environment Files
    runs-on: ubuntu-latest
    needs: deploy-contracts
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download deployment addresses
        uses: actions/download-artifact@v4
        with:
          name: deployment-addresses
          path: packages/contracts/deployments

      - name: Update .env files
        run: |
          echo "Manual step: Update .env files with deployed addresses"
          echo "This would typically involve:"
          echo "  1. Reading deployment JSON"
          echo "  2. Updating apps/agent-service/.env"
          echo "  3. Updating apps/api-gateway/.env"
          echo "  4. Updating apps/web-dapp/.env"
          echo "  5. Creating a PR with changes"
